name: GDrive Video Processing 


# Run with a CURL request:
# 
# curl                                                            \                                    
# -X POST                                                         \                                   
# -H "Accept: application/vnd.github+json"                        \                  
# -H "Authorization: Bearer GITHUB_PAT_KEY"                       \                  
# -H "X-GitHub-Api-Version: 2022-11-28"                           \                    
#     https://api.github.com/repos/ioroot/ffmpeg__bash-scripts/dispatches \         
#     -d '{"event_type":"run_autoflip","client_payload":{         \         
#             "GDRIVE_FOLDER":  "FOLDER/IN/GDRIVE/TO/USE",        \            
#         }                                                       \


on:

  # Via a webhook
  repository_dispatch:
    types: gdrive_video_convert

env:
  # ╭──────────────────────────────────────────────────────────╮
  # │                Target Google Sheet Script                │
  # ╰──────────────────────────────────────────────────────────╯
  APPS_SCRIPT: "https://script.google.com/macros/s/AKfycbwWQATxLb_2qzAF6_l4YnxNgZwo0YemfdgPoR7BU8SBUcOxnJfEBQUnkBWM3H2oRXQ/exec"

  # ╭──────────────────────────────────────────────────────────╮
  # │                        Video URL                         │
  # │        1. Get Data from CURL request and webhook         │
  # │            2. or Get URL from commit message             │
  # ╰──────────────────────────────────────────────────────────╯
  GDRIVE_FOLDER_PREFIX:     "/SocialExporter/videos"
  GDRIVE_FOLDER:            ${{ github.event.client_payload.GDRIVE_FOLDER }}

  # ╭──────────────────────────────────────────────────────────╮
  # │                Aspect Ratio to output as.                │
  # ╰──────────────────────────────────────────────────────────╯
  TEMPLATE:             ${{ github.event.client_payload.TEMPLATE }}

  # ╭──────────────────────────────────────────────────────────╮
  # │                    Text for Template                     │
  # ╰──────────────────────────────────────────────────────────╯
  TEXT_TOP_B64:         ${{ github.event.client_payload.TEXT_TOP }}


  # ╭──────────────────────────────────────────────────────────╮
  # │              Where to upload the result to.              │
  # │                      - Server name                       │
  # │                     - Target folder.                     │
  # ╰──────────────────────────────────────────────────────────╯
  SERVER:               'https://londonparkour.com'
  TARGET_ROOT_FOLDER:   '/var/www/vhosts/media.londonparkour.com/processed'


jobs:

  build:

    runs-on: ubuntu-latest
    container:
      
    steps:

      - name: list variables
        run: |
          env
          echo "TEXT_TOP_B64: ${{ env.TEXT_TOP_B64 }}"

      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#repository_dispatch
      # https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#create-a-repository-dispatch-event
      - name: install dependencies
        run: |
          sudo add-apt-repository ppa:savoury1/ffmpeg4
          sudo add-apt-repository ppa:savoury1/ffmpeg5
          sudo apt-get update 
          sudo apt-get install --no-install-recommends ffmpeg rclone ssh sshpass


      - name: Checkout Repo
        uses: actions/checkout@v3


      - name: rclone
        uses: wei/rclone@v1
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        with:
          args: copy GDrive:${GDRIVE_FOLDER_PREFIX}${GDRIVE_FOLDER} ./raw_videos


        # Use sudo otherwise permissions to /tmp won't work in runner
      - name: run ffmpeg template
        run: |
            echo "londonparkour.com/classes" > ./text_bottom.txt
            echo ${{ env.TEXT_TOP_B64 }} | base64 --decode > ./text_top.txt
            mkdir -p ./processed_videos
            cd ./templates
            sudo ./ft_simple_1-1.sh -f ../raw_videos/raw -o ../processed_videos/processed.mp4 -t "./text_top.txt"


      - name: rclone
        uses: wei/rclone@v1
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        with:
          args: copy ./processed_videos GDrive:${GDRIVE_FOLDER_PREFIX}${GDRIVE_FOLDER}/processed


      - name: Copy Video to Server
        run: |
          mkdir ~/.ssh
          ssh-keyscan -H ${{env.SERVER}} >> ~/.ssh/known_hosts

          SOURCE_DIR="./processed_videos"
          TARGET_DIR="${TARGET_ROOT_FOLDER}${GDRIVE_FOLDER}/processed"

          echo "SOURCE DIR: ${SOURCE_DIR}"
          echo "TARGET DIR: ${TARGET_DIR}"

          sshpass -p '${{secrets.SSH_PASS}}' ssh -v -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{secrets.SSH_USER}}@${{env.SERVER}} "mkdir -p ${TARGET_DIR}"
          sshpass -p '${{secrets.SSH_PASS}}' scp -v -p -r -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SOURCE_DIR} ${{secrets.SSH_USER}}@${{env.SERVER}}:${TARGET_DIR}


      - name: Update google sheet with processed video folder
        run: |
          curl "${{ env.APPS_SCRIPT }}?folder=%22${GDRIVE_FOLDER}%22"
