@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 222.2 84% 4.9%;
  --foreground: 210 40% 98%;
  --card: 222.2 84% 4.9%;
  --card-foreground: 210 40% 98%;
  --popover: 222.2 84% 4.9%;
  --popover-foreground: 210 40% 98%;
  --primary: 210 40% 98%;
  --primary-foreground: 222.2 84% 4.9%;
  --secondary: 217.2 32.6% 17.5%;
  --secondary-foreground: 210 40% 98%;
  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;
  --accent: 217.2 32.6% 17.5%;
  --accent-foreground: 210 40% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 210 40% 98%;
  --border: 217.2 32.6% 17.5%;
  --input: 217.2 32.6% 17.5%;
  --ring: 212.7 26.8% 83.9%;
  --radius: 0.5rem;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  @apply bg-background text-foreground;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

/* Grid background pattern */
.bg-grid-pattern {
  background-image: 
    linear-gradient(hsl(var(--border)) 1px, transparent 1px),
    linear-gradient(90deg, hsl(var(--border)) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Rete.js specific styles */
.rete-editor {
  background: hsl(var(--background));
  color: hsl(var(--foreground));
}

.rete-node {
  background: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius);
  color: hsl(var(--card-foreground));
}

.rete-node.selected {
  border-color: hsl(var(--primary));
  box-shadow: 0 0 0 2px hsl(var(--primary) / 0.2);
}

.rete-socket {
  background: hsl(var(--muted));
  border: 2px solid hsl(var(--border));
}

.rete-socket.input {
  background: hsl(var(--accent));
}

.rete-socket.output {
  background: hsl(var(--primary));
}

.rete-connection {
  stroke: hsl(var(--primary));
  stroke-width: 2px;
}

.rete-control input {
  background: hsl(var(--input));
  border: 1px solid hsl(var(--border));
  border-radius: calc(var(--radius) - 2px);
  color: hsl(var(--foreground));
  padding: 0.5rem;
}

.rete-control input:focus {
  outline: none;
  border-color: hsl(var(--ring));
  box-shadow: 0 0 0 2px hsl(var(--ring) / 0.2);
}

/* Scale animation for ff_scale preview */
@keyframes scaleLoop {
  0% {
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) scale(0.5);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}

.animate-scale-loop {
  animation: scaleLoop 3s ease-in-out infinite;
}

/* Crop animation for ff_crop preview */
@keyframes cropLoop {
  0% {
    clip-path: inset(0% 0% 0% 0%);
  }
  25% {
    clip-path: inset(10% 20% 10% 20%);
  }
  50% {
    clip-path: inset(20% 40% 20% 40%);
  }
  75% {
    clip-path: inset(10% 20% 10% 20%);
  }
  100% {
    clip-path: inset(0% 0% 0% 0%);
  }
}

.animate-crop-loop {
  animation: cropLoop 4s ease-in-out infinite;
}

/* Pad animation for ff_pad preview */
@keyframes padLoop {
  0% {
    transform: translate(-50%, -50%);
    border: 4px solid transparent;
  }
  25% {
    transform: translate(-50%, -50%);
    border: 8px solid #ef4444;
  }
  50% {
    transform: translate(-50%, -50%);
    border: 12px solid #ef4444;
  }
  75% {
    transform: translate(-50%, -50%);
    border: 8px solid #ef4444;
  }
  100% {
    transform: translate(-50%, -50%);
    border: 4px solid transparent;
  }
}

.animate-pad-loop {
  animation: padLoop 3s ease-in-out infinite;
  border-radius: 4px;
}

/* Aspect ratio animation for ff_aspect_ratio preview */
@keyframes aspectRatioLoop {
  0% {
    width: 320px;
    height: 180px;
  }
  50% {
    width: 180px;
    height: 180px;
  }
  100% {
    width: 320px;
    height: 180px;
  }
}

.animate-aspect-ratio-loop {
  animation: aspectRatioLoop 4s ease-in-out infinite;
  object-fit: cover;
}

/* Rotate animation for ff_rotate preview */
@keyframes rotateLoop {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  25% {
    transform: translate(-50%, -50%) rotate(90deg);
  }
  50% {
    transform: translate(-50%, -50%) rotate(180deg);
  }
  75% {
    transform: translate(-50%, -50%) rotate(270deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

.animate-rotate-loop {
  animation: rotateLoop 3s ease-in-out infinite;
}

/* Flip animation for ff_flip preview */
@keyframes flipLoop {
  0% {
    transform: translate(-50%, -50%) scaleX(1) scaleY(1);
  }
  25% {
    transform: translate(-50%, -50%) scaleX(-1) scaleY(1);
  }
  50% {
    transform: translate(-50%, -50%) scaleX(-1) scaleY(-1);
  }
  75% {
    transform: translate(-50%, -50%) scaleX(1) scaleY(-1);
  }
  100% {
    transform: translate(-50%, -50%) scaleX(1) scaleY(1);
  }
}

.animate-flip-loop {
  animation: flipLoop 4s ease-in-out infinite;
}

/* To landscape animation for ff_to_landscape preview */
@keyframes toLandscapeLoop {
  0% {
    width: 180px;
    height: 320px;
  }
  50% {
    width: 320px;
    height: 180px;
  }
  100% {
    width: 180px;
    height: 320px;
  }
}

.animate-to-landscape-loop {
  animation: toLandscapeLoop 3s ease-in-out infinite;
  object-fit: cover;
}

/* To portrait animation for ff_to_portrait preview */
@keyframes toPortraitLoop {
  0% {
    width: 320px;
    height: 180px;
  }
  50% {
    width: 180px;
    height: 320px;
  }
  100% {
    width: 320px;
    height: 180px;
  }
}

.animate-to-portrait-loop {
  animation: toPortraitLoop 3s ease-in-out infinite;
  object-fit: cover;
}